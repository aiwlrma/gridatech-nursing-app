import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
  SafeAreaView,
} from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { colors, typography, spacing } from '../../theme';
import RecommendCard from '../../components/cards/RecommendCard';
import Section from '../../components/common/Section';

const RecommendedDetailScreen: React.FC = () => {
  const navigation = useNavigation();

  const handleCardPress = (title: string) => {
    console.log(`Navigating to: ${title}`);
    // TODO: Implement navigation to specific learning content
  };

  return (
    <SafeAreaView style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity 
          style={styles.backButton}
          onPress={() => navigation.goBack()}
        >
          <Text style={styles.backIcon}>‚Üê</Text>
        </TouchableOpacity>
        <Text style={styles.headerTitle}>ÎßûÏ∂§ Ï∂îÏ≤ú</Text>
        <View style={styles.headerSpacer} />
      </View>

      <ScrollView 
        style={styles.scrollView}
        showsVerticalScrollIndicator={false}
        contentContainerStyle={styles.scrollContent}
      >
        {/* ÏïΩÏ†ê Í∏∞Î∞ò Ï∂îÏ≤ú */}
        <Section title="ÏïΩÏ†ê Î≥¥ÏôÑ ÌïôÏäµ">
          <RecommendCard 
            icon="üíâ"
            title="ÏùòÏÇ¨ÏÜåÌÜµ ÏßëÏ§ë ÌïôÏäµ"
            subtitle="ÏòàÏÉÅ ÏÜåÏöî 30Î∂Ñ"
            reason="78Ï†ê ‚Üí 85Ï†ê Î™©Ìëú"
            badge="Ï∂îÏ≤ú"
            onPress={() => handleCardPress('ÏùòÏÇ¨ÏÜåÌÜµ ÏßëÏ§ë ÌïôÏäµ')}
          />
          <RecommendCard 
            icon="ü©∫"
            title="ÌôòÏûê ÏïàÏ†Ñ ÌîÑÎ°úÌÜ†ÏΩú"
            subtitle="ÏòàÏÉÅ ÏÜåÏöî 45Î∂Ñ"
            reason="72Ï†ê ‚Üí 80Ï†ê Î™©Ìëú"
            badge="Ï∂îÏ≤ú"
            onPress={() => handleCardPress('ÌôòÏûê ÏïàÏ†Ñ ÌîÑÎ°úÌÜ†ÏΩú')}
          />
          <RecommendCard 
            icon="üìã"
            title="Í∏∞Î°ù ÏûëÏÑ±Î≤ï"
            subtitle="ÏòàÏÉÅ ÏÜåÏöî 25Î∂Ñ"
            reason="68Ï†ê ‚Üí 75Ï†ê Î™©Ìëú"
            onPress={() => handleCardPress('Í∏∞Î°ù ÏûëÏÑ±Î≤ï')}
          />
        </Section>

        {/* Îã§Ïùå Îã®Í≥Ñ ÌïôÏäµ */}
        <Section title="Îã§Ïùå Îã®Í≥Ñ">
          <RecommendCard 
            icon="üéØ"
            title="IV ÏÇΩÏûÖ Ïà†Í∏∞ Í≥†Í∏â"
            subtitle="VR ÏãúÎÆ¨Î†àÏù¥ÏÖò"
            reason="Í∏∞Ï¥à Í≥ºÏ†ï ÏôÑÎ£å"
            onPress={() => handleCardPress('IV ÏÇΩÏûÖ Ïà†Í∏∞ Í≥†Í∏â')}
          />
          <RecommendCard 
            icon="üè•"
            title="ÏùëÍ∏âÏ≤òÏπò Ïã¨Ìôî"
            subtitle="Ïã§Ïäµ Í∏∞Î∞ò ÌïôÏäµ"
            reason="Ï§ëÍ∏â Í≥ºÏ†ï ÏôÑÎ£å"
            onPress={() => handleCardPress('ÏùëÍ∏âÏ≤òÏπò Ïã¨Ìôî')}
          />
          <RecommendCard 
            icon="üíä"
            title="Î≥µÌï© Ìà¨ÏïΩ Í¥ÄÎ¶¨"
            subtitle="Í≥†Í∏â ÏãúÎÇòÎ¶¨Ïò§"
            reason="Í∏∞Î≥∏ Ìà¨ÏïΩ ÏôÑÎ£å"
            onPress={() => handleCardPress('Î≥µÌï© Ìà¨ÏïΩ Í¥ÄÎ¶¨')}
          />
        </Section>

        {/* Î≥µÏäµ ÌïÑÏöî */}
        <Section title="Î≥µÏäµ Ï∂îÏ≤ú">
          <RecommendCard 
            icon="üìù"
            title="Ìà¨ÏïΩ 5R ÏõêÏπô"
            subtitle="7Ïùº Ï†Ñ ÌïôÏäµ"
            reason="Ï£ºÍ∏∞Ï†Å Î≥µÏäµ ÌïÑÏöî"
            onPress={() => handleCardPress('Ìà¨ÏïΩ 5R ÏõêÏπô')}
          />
          <RecommendCard 
            icon="ü©π"
            title="ÏÉÅÏ≤ò Í¥ÄÎ¶¨ Í∏∞Î≥∏"
            subtitle="10Ïùº Ï†Ñ ÌïôÏäµ"
            reason="Í∏∞Ïñµ Í∞ïÌôî ÌïÑÏöî"
            onPress={() => handleCardPress('ÏÉÅÏ≤ò Í¥ÄÎ¶¨ Í∏∞Î≥∏')}
          />
          <RecommendCard 
            icon="üå°Ô∏è"
            title="Ï≤¥Ïò® Ï∏°Ï†ï Ï†ïÌôïÎèÑ"
            subtitle="5Ïùº Ï†Ñ ÌïôÏäµ"
            reason="Ï†ïÌôïÎèÑ Ìñ•ÏÉÅ ÌïÑÏöî"
            onPress={() => handleCardPress('Ï≤¥Ïò® Ï∏°Ï†ï Ï†ïÌôïÎèÑ')}
          />
        </Section>

        {/* Ïù∏Í∏∞ ÏΩòÌÖêÏ∏† */}
        <Section title="Îã§Î•∏ ÌïôÏÉùÎì§Ïù¥ ÎßéÏù¥ Î≥∏">
          <RecommendCard 
            icon="üî•"
            title="ÏùëÍ∏âÏ≤òÏπò ÌîÑÎ°úÌÜ†ÏΩú"
            subtitle="Ï°∞ÌöåÏàò 1,245Ìöå"
            onPress={() => handleCardPress('ÏùëÍ∏âÏ≤òÏπò ÌîÑÎ°úÌÜ†ÏΩú')}
          />
          <RecommendCard 
            icon="‚≠ê"
            title="Í∞ÑÌò∏ÏÇ¨ Î©¥Ï†ë Ï§ÄÎπÑ"
            subtitle="Ï°∞ÌöåÏàò 987Ìöå"
            onPress={() => handleCardPress('Í∞ÑÌò∏ÏÇ¨ Î©¥Ï†ë Ï§ÄÎπÑ')}
          />
          <RecommendCard 
            icon="üìö"
            title="Í∞ÑÌò∏Ìïô ÌïµÏã¨ Í∞úÎÖê"
            subtitle="Ï°∞ÌöåÏàò 1,156Ìöå"
            onPress={() => handleCardPress('Í∞ÑÌò∏Ìïô ÌïµÏã¨ Í∞úÎÖê')}
          />
        </Section>

        {/* Bottom spacing */}
        <View style={styles.bottomSpacing} />
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: colors.unified.background,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: spacing.md,
    paddingVertical: spacing.md,
    backgroundColor: colors.unified.card,
    borderBottomWidth: 1,
    borderBottomColor: colors.unified.border,
  },
  backButton: {
    width: 40,
    height: 40,
    alignItems: 'center',
    justifyContent: 'center',
    borderRadius: 20,
    backgroundColor: colors.background.secondary,
  },
  backIcon: {
    fontSize: 20,
    color: colors.unified.textPrimary,
    fontWeight: '600',
  },
  headerTitle: {
    ...typography.textStyles.subtitle,
    fontFamily: typography.fontFamily.semibold,
    color: colors.unified.textPrimary,
  },
  headerSpacer: {
    width: 40,
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingTop: spacing.lg,
  },
  bottomSpacing: {
    height: spacing['2xl'],
  },
});

export default RecommendedDetailScreen;
